{"version":3,"file":"static/js/962.1517dfa5.chunk.js","mappings":"4TAEaA,EAAiB,mCAAG,oGACNC,IAAAA,IAAU,4FADJ,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAQ,mCAAG,WAAOC,GAAP,uFACGJ,IAAAA,IAAA,6CAAgDI,EAAhD,8CADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAKRG,EAAiB,mCAAG,WAAOC,GAAP,uFACNN,IAAAA,IAAA,oGAAuGM,IADjG,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBK,EAAY,mCAAG,WAAOH,GAAP,uFACDJ,IAAAA,IAAA,6CAAgDI,EAAhD,sDADC,cAClBH,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZM,EAAe,mCAAG,WAAOJ,GAAP,uFACJJ,IAAAA,IAAA,6CAAgDI,EAAhD,sDADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,uD,0ICrB5B,EAAuB,mB,SCER,SAASO,EAAKC,GAEzB,IAAOC,EAAQD,EAARC,KAEP,OACI,4BACI,kCACA,wBACKA,EAAKC,KAAI,SAAAC,GAAK,OACX,gBAAmBC,UAAWC,EAA9B,WACI,gBAAKC,IAAG,0CAAqCH,EAAMI,cAAgBC,IAAKL,EAAMM,KAAMC,MAAM,UACzFP,EAAMM,OAFFN,EAAMQ,YCPpB,SAASC,IAEpB,IAAQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QAER,GAAkCoB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAEgCtB,EAAAA,EAAAA,IAAaH,GAF7C,OAEcqB,EAFd,OAGQC,EAAaD,EAAUd,MAH/B,gDAKQiB,EAAS,EAAD,IALhB,0DAFY,uBAAC,WAAD,wBAWZE,KAEC,CAAC1B,KAGF,2BACKuB,IAAS,+CAAuBA,EAAMI,WACtCN,IAAa,SAAChB,EAAD,CAAME,KAAMc","sources":["services/moviesApi.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","views/CastView.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=92f9c720cb77c75804e80b01c8601d54')\n    return response.data\n}\n\nexport const getMovie = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\nexport const getMovieByKeyword = async (searchString) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie/?api_key=92f9c720cb77c75804e80b01c8601d54&query=${searchString}`)\n    return response.data\n}\n\nexport const getMovieCast = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__a0CDL\"};","import PropTypes from 'prop-types';\nimport s from './Cast.module.css'\n\nexport default function Cast(props) {\n\n    const {cast} = props\n\n    return(\n        <div>\n            <h3>Cast</h3>\n            <ul>\n                {cast.map(actor => \n                    <li key={actor.id} className={s.item}>\n                        <img src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`} alt={actor.name} width=\"100px\"/>\n                        {actor.name}\n                    </li>)}\n            </ul>\n        </div>\n    )\n}\n\nCast.propTypes = {\n    cast: PropTypes.array.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../services/moviesApi.js'\nimport Cast from 'components/Cast/Cast'\n\nexport default function CastView() {\n\n    const { movieId } = useParams();\n\n    const [movieCast, setMovieCast] = useState(null)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n\n        async function fetchMovieCast() {\n            try {\n                const movieCast = await getMovieCast(movieId);\n                setMovieCast(movieCast.cast)\n            } catch (error) {\n                setError(error)\n            } \n        }\n\n        fetchMovieCast();\n\n      }, [movieId]);\n\n    return (\n        <div>\n            {error && <p>An error occurred: {error.message}</p>}\n            {movieCast && <Cast cast={movieCast}/>}\n        </div>\n    )\n}"],"names":["getTrendingMovies","axios","response","data","getMovie","movieId","getMovieByKeyword","searchString","getMovieCast","getMovieReviews","Cast","props","cast","map","actor","className","s","src","profile_path","alt","name","width","id","CastView","useParams","useState","movieCast","setMovieCast","error","setError","useEffect","fetchMovieCast","message"],"sourceRoot":""}