{"version":3,"file":"static/js/686.6095965a.chunk.js","mappings":"4TAEaA,EAAiB,mCAAG,oGACNC,IAAAA,IAAU,4FADJ,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAQ,mCAAG,WAAOC,GAAP,uFACGJ,IAAAA,IAAA,6CAAgDI,EAAhD,8CADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAKRG,EAAiB,mCAAG,WAAOC,GAAP,uFACNN,IAAAA,IAAA,oGAAuGM,IADjG,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBK,EAAY,mCAAG,WAAOH,GAAP,uFACDJ,IAAAA,IAAA,6CAAgDI,EAAhD,sDADC,cAClBH,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZM,EAAe,mCAAG,WAAOJ,GAAP,uFACJJ,IAAAA,IAAA,6CAAgDI,EAAhD,sDADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,uD,mJCpBb,SAASO,EAAQC,GAE5B,IAAOC,EAAWD,EAAXC,QAEP,OACI,0BACI,wBACKA,EAAQC,KAAI,SAAAC,GAAM,OACf,2BACI,qCAAW,uBAAIA,EAAOC,YACrBD,EAAOE,UAFHF,EAAOG,WCLrB,SAASC,IAEpB,IAAQb,GAAYc,EAAAA,EAAAA,MAAZd,QAER,GAAwCe,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAEmChB,EAAAA,EAAAA,IAAgBJ,GAFnD,OAEcgB,EAFd,OAGQC,EAAgBD,EAAaK,SAHrC,gDAKQF,EAAS,EAAD,IALhB,0DAFY,uBAAC,WAAD,wBAWZG,KAEC,CAACtB,KAGF,2BACKkB,IAAS,+CAAuBA,EAAMK,WACtCP,EAAaQ,OAAO,GAAE,SAACnB,EAAD,CAASE,QAASS,KAAgB","sources":["services/moviesApi.js","components/Reviews/Reviews.jsx","views/ReviewsView.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=92f9c720cb77c75804e80b01c8601d54')\n    return response.data\n}\n\nexport const getMovie = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\nexport const getMovieByKeyword = async (searchString) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie/?api_key=92f9c720cb77c75804e80b01c8601d54&query=${searchString}`)\n    return response.data\n}\n\nexport const getMovieCast = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\n","import PropTypes from 'prop-types';\n\nexport default function Reviews(props) {\n\n    const {reviews} = props\n\n    return(\n        <div>\n            <ul>\n                {reviews.map(review => \n                    <li key={review.id}>\n                        <p>Author: <b>{review.author}</b></p>\n                        {review.content}\n                    </li>)}\n            </ul>\n        </div>\n    )\n}\n\nReviews.propTypes = {\n    reviews: PropTypes.array.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/moviesApi.js'\nimport Reviews from '../components/Reviews/Reviews'\n\nexport default function ReviewsView() {\n\n    const { movieId } = useParams();\n\n    const [movieReviews, setMovieReviews] = useState([])\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n\n        async function fetchMovieReviews() {\n            try {\n                const movieReviews = await getMovieReviews(movieId);\n                setMovieReviews(movieReviews.results)\n            } catch (error) {\n                setError(error)\n            } \n        }\n\n        fetchMovieReviews();\n\n      }, [movieId]);\n\n    return (\n        <div>\n            {error && <p>An error occurred: {error.message}</p>}\n            {movieReviews.length>1?<Reviews reviews={movieReviews}/>:<p>There are no reviews for this movie</p>}\n        </div>\n    )\n}"],"names":["getTrendingMovies","axios","response","data","getMovie","movieId","getMovieByKeyword","searchString","getMovieCast","getMovieReviews","Reviews","props","reviews","map","review","author","content","id","ReviewsView","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","results","fetchMovieReviews","message","length"],"sourceRoot":""}