{"version":3,"file":"static/js/832.ca1a2160.chunk.js","mappings":"oLAAe,SAASA,IAEpB,OAAO,wC,0JCAEC,EAAiB,mCAAG,oGACNC,IAAAA,IAAU,4FADJ,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAQ,mCAAG,WAAOC,GAAP,uFACGJ,IAAAA,IAAA,6CAAgDI,EAAhD,8CADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAKRG,EAAiB,mCAAG,WAAOC,GAAP,uFACNN,IAAAA,IAAA,oGAAuGM,IADjG,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,uD,+JCX9B,EAA4B,gCAA5B,EAA2E,mC,SCE5D,SAASK,EAAaC,GAEjC,IAAOC,EAASD,EAATC,MAEP,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKC,IAAG,0CAAqCH,EAAMI,aAAeC,IAAKL,EAAMM,WAEjF,4BACI,0BAAKN,EAAMM,MAAX,KAAoBN,EAAMO,aAAaC,MAAM,EAAE,GAA/C,QACA,wCAAqC,GAArBR,EAAMS,aAAtB,QACA,sCACA,uBAAIT,EAAMU,YACV,mCACCV,EAAMW,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAK,aCZ/B,SAASC,IAEpB,IAAQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QAER,GAA0BsB,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACIH,GAAW,GADf,mBAG4B1B,EAAAA,EAAAA,IAASC,GAHrC,OAGcK,EAHd,OAIQwB,QAAQC,IAAI,SAAUzB,GACtBkB,EAASlB,GALjB,gDAOQsB,EAAS,EAAD,IAPhB,yBASQF,GAAW,GATnB,6EADY,uBAAC,WAAD,wBAcZM,KAEC,CAAC/B,KAIF,2BACKwB,IAAW,SAAC9B,EAAA,EAAD,IACXgC,IAAS,8CAAsBA,EAAMM,WACrC3B,IAAS,SAACF,EAAD,CAAcE,MAAOA,KAC/B,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAM4B,GAAE,kBAAajC,EAAb,SAAR,qBACJ,yBAAI,SAAC,KAAD,CAAMiC,GAAE,kBAAajC,EAAb,YAAR,2BAER,SAAC,KAAD","sources":["components/Loader.jsx","services/moviesApi.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","views/MovieView.jsx"],"sourcesContent":["export default function Loader() {\n\n    return <p>Loading...</p>\n}","import axios from 'axios';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=92f9c720cb77c75804e80b01c8601d54')\n    return response.data\n}\n\nexport const getMovie = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=92f9c720cb77c75804e80b01c8601d54`)\n    return response.data\n}\n\nexport const getMovieByKeyword = async (searchString) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie/?api_key=92f9c720cb77c75804e80b01c8601d54&query=${searchString}`)\n    return response.data\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"imageWrapper\":\"MovieDetails_imageWrapper__ImpNM\"};","import PropTypes from 'prop-types';\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails(props) {\n\n    const {movie} = props\n\n    return(\n        <div className={s.container}>\n            <div className={s.imageWrapper}>\n                <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n            </div>\n            <div>\n                <h1>{movie.title} ({movie.release_date.slice(0,4)})</h1>\n                <p>User Score: {movie.vote_average * 10}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h2>Genres</h2>\n                {movie.genres.map(g => g.name+' ')}\n            </div>\n        </div>\n    )\n}\n\nMovieDetails.propTypes = {\n    movie: PropTypes.object.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { useParams, Link, Outlet} from 'react-router-dom';\nimport { getMovie } from '../services/moviesApi.js'\nimport Loader from 'components/Loader'\nimport MovieDetails from 'components/MovieDetails/MovieDetails'\n\nexport default function MovieView() {\n\n    const { movieId } = useParams();\n\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function fetchMovie() {\n            setLoading(true);\n            try {\n                const movie = await getMovie(movieId);\n                console.log('movie:', movie)\n                setMovie(movie)\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }\n        }\n\n        fetchMovie();\n\n      }, [movieId]);\n\n\n    return(\n        <div>\n            {loading && <Loader />}\n            {error && <p>An error occured: {error.message}</p>}\n            {movie && <MovieDetails movie={movie} />}\n            <h4>Additional information</h4>\n            <ul>\n                <li><Link to={`/movies/${movieId}/cast`}>Cast</Link></li>\n                <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n            </ul>\n            <Outlet />\n        </div>\n    )\n}"],"names":["Loader","getTrendingMovies","axios","response","data","getMovie","movieId","getMovieByKeyword","searchString","MovieDetails","props","movie","className","s","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","g","name","MovieView","useParams","useState","setMovie","loading","setLoading","error","setError","useEffect","console","log","fetchMovie","message","to"],"sourceRoot":""}